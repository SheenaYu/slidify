mynum <=5/3
5+3
5/3
5-3
mynum
x <- 3
typeof(x)
x <- 3L
typeof(x)
x <- "smu"
x
typeof(x)
x <- TRUE
typeof(x)
x<-false
x <- FALSE
typeof(x)
v <- NULL
v
v <- na
v <- NA
v
c(3,1,2)
v <- c(3,1,2)
v
v <- c(3,1,"abc")
v
seq(1,10)
1:10
seq(5,1)
seq(1,10,by=3)
seq(10,4,by=-2)
seq(1,10,;ength=5)
seq(1,10,length=5)
rep(c(1,3),length=8)
length(rep(1,5))
seq(5,-3,by-2)
seq(5,3,by=2)
seq(5,3,by=-2)
seq(5,-3,by=-2)
rep
rep(5,6)
rep(c(4,6),length=6)
rep(c(4,6),time=3)
m1 <- matrix(seq(1,8),nrow=4)
m1
m2 <- matrix(1:8,nrow=4,byrow=T)
m2
matrix(1:8,nrow=2)
v <- c(5,3,NA,NULL,3,4,1,8)
V
v
matrix(v,nrow=3)
dim(m1)
nrow(m1)
ncol(m1)
m1(,1)
m1[,1]
dfe(m1[,1])
length(m1[,1])
m <- matrix
m <- matrix(1:12,nrow=3, ncol=4)
m
colnames(m) <- c("c1","c2","c3","c4")
m
rownames(m) <- c("r1","r2","r3")
m
m["r2","c1"]
m <- matrix(1:12,3,4)
m
colnames(m) <- c("c1","c2","c3","c4")
rownames(m) <- c("r1","r2","r3")
m
m["r2","c1"]
m[c("r1","r3"),]
m[1:2,1:2] <- 0
m["r3","c4"] <- 99
m
ar <- array(1:24,dim=c(2,3,4))
ar
ar[2,1,4]
ar[,,2]
a4 <- ar[,,2]
a4
ar
dimnames(ar) <- list(c("r1","r2"),c("c1","c2","c3"),c("m1","m2","m3","m4"))
ar
rm(m4)
ls()
rm(list=ls())
ls()
x <- seq(10,1,by=-1)
mean(x)
sd(x)
x
mean(x>7)
sqrt(sum(x))
sum(x)
sqrt(55)
summary(x)
x <- seq(1,9,by=2)
y <- seq(10,50,by=10)
x+y
sum(x)
sum(y)
sum(x[1:2])
x <- seq(1,6)
x+1
x+c(10,20)
x+c(10,20,30)
x+seq(1:4)
x%*%y
x <- seq(1,9,by=2)
x%*%y
crossprod(x,y)
x/y
x <- matrix(1:9,nrow=3)
x
x%*%x
rowsum(x)
rowSums(x)
colSums(x)
rowMeans(x)
colMeans(x)
x
log(x)
View(x)
View(x)
x <- seq(11,20,by=1)
x[1:3]
x[c(2,4,6)]
x[-(1:6)]
x[7:10]
sample(1:10,7,replace=FALSE)
sample(1:10,7,replace=TRUE)
x <- 11:20
x
v <- sample(1:length(x),3,replace=t)
v <- sample(1:length(x),3,replace=T)
v
v
ls()
x[v]
x
myfuncl <- function(myvec){myresult <- c(mean(myvec),sd(myvec))}
myfuncl <- function(myvec){
myresult <- c(mean(myvec),sd(myvec))
myresult
}
v1 <- runif(10)
myfuncl(v1)
mufunc2 <- function(vec1,vec2){
myresult <- c(mean(vec1),mean(vec2))
myresult
}
v1 <- runif(10)
v2 <- runif(10)
myfunc2(v1,v2)
mufunc2(v1,v2)
save.image("E:/MSBA/R BootCamp1.RData")
head(iris)
iris_subset <- filter(iris, Species == "setosa")
iris_subset <- select(iris_subset, Sepal.Length, Sepal.Width)
diamonds_reduced<-mutate(diamonds_reduced,price_per_carat=price/carat)
install.packages("dplyr")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
diamonds_reduced <- select(diamonds, carat, color, price, clarity)
head(diamonds_reduced)
iris_subset <- filter(iris, Species == "setosa")
iris_subset <- select(iris_subset, Sepal.Length, Sepal.Width)
head(iris_subset)
diamonds_reduced <- mutate(diamonds_reduced, price_per_carat = price/carat)
head(diamonds_reduced)
head(arrange(diamonds_reduced, price_per_carat))
head(arrange(diamonds_reduced, desc(price_per_carat)))
iris_subset<-mutate(iris_subset,Sepal.Area = Sepal.Length * Sepal.Width )
head(iris_subset)
head(arrange(iris_reduced,Sepal.Area))
head(arrange(iris_subset,Sepal.Area))
data1<-data.frame(company=c("A","B")),c1=c(10,40))
data1<-data.frame(company=c("A","B"),c1=c(10,40))
data2<-data.frame(company=c("A","C"),c2=c(20,30))
data1
data2
merge(data1,data2)
merge(data1,data2,all=TRUE)
summarize(diamonds_reduced,avg_price_per_carat=mean(price_per_carat))
summarize(diamonds_reduced,avg_price_per_carat=mean(price_per_carat>3000))
group_by(diamonds_reduced,clarity)
summarize(group_by(diamonds_reduced,clarity),avg_price_per_carat=mean(price_per_carat))
summarize(group_by(diamonds_reduced,color),avg_price_per_carat=mean(price_per_carat))
head(arrange(diamonds_reduced,desc(avg_price_per_carat)))
head(arrange(diamonds_reduced,desc(avg_price_per_carat)))
arrange(diamonds_reduced,desc(avg_price_per_carat))
mysummary<-summarize(group_by(diamonds_reduced,color),avg_price_per_carat=mean(price_per_carat))
arrange(mysummary,desc(avg_price_per_carat))
diamonds_reduced_by_chain<-diamonds%>%
filter(color=="E")%>%
select(carat,color,price,clarity)%>%
mutate(price_per_carat=price/carat)
head(diamonds_reduced_by_chain)
iris_reduced<-iris%>%mutate(Sepal.Area=Sepal.Length*Sepal.Width,Petal.Area=Petal.Length*Petal.Width)%>%select(Sepal.Area,Petal.Area)
head(iris_reduced)
iris_reduced<-iris%>%filter(Species=="virginica")%>%mutate(Sepal.Area=Sepal.Length*Sepal.Width,Petal.Area=Petal.Length*Petal.Width)%>%select(Sepal.Area,Petal.Area)
head(iris_reduced)
diamonds_reduced_grouped<-diamonds_reduced%>%
group_by(color)%>%
mutate(avg_price_per_carat_group=mean(price_per_carat))
head(diamonds_reduced_grouped)
ex_long
install.packages("reshape2")
ex_wide
ex_long<-melt(ex_wide,id="student_name")
install.packages("reshape2")
ex_long<-melt(ex_wide,id="student_name")
tb1 <- read.table("E:\\MSBA\\ex_header.txt", header=T)
library("reshape2")
ex_long<-melt(ex_wide,id="student_name")
ex_wide <- read.delim("E:/MSBA/ex_wide.txt")
View(ex_wide)
ex_long <- melt(ex_wide, id = "student_name")
ex_long
dcast(ex_long,student_name~variable)
dcast(ex_long2,student_name+age~variable)
ex_long2 <- melt(ex_wide, id = c("student_name","age"))
ex_long2
library(tips)
head(tips)
tips_long<-melt(tips,id.vars=c("sex","smoker","day","time","size","total_bill"))
tips_long
tips_wide<-dcast(tips_long,sex+smoker+day+time+size+total_bill~variable,fun.aggregate=mean)
tips_wide
install.packages("tidyr")
ex_wide
ex_long<-gather(ex_wide,category,gpa_value)
library(tidyr)
ex_long<-gather(ex_wide,category,gpa_value,3)
ex_long
install.packages("rmarkdown")
library(readxl)
library(ggplot2)
install.packages("rmarkdown")
list()
ls()
rm(list=ls())
cat(hello)
hello<-"Hello,world!\n"
cat(hello)
nchar(hello)
?nchar
hello1<-"Hello,world!"
nchar(hello1)
hello2<-"\"
hello2<-"\"
hello2<-"\!"
hello2<-"n\!"
hello2<-"!n\"
hello1<-"Hello,world!\"
hello1<-"Hello,world!\a"
nchar(hello1)
cat(hello1)
?cat
swirl()
install.packages("swirl")
swirl()
library(swirl)
swirl()
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
print(tf)
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name<-c(my_char,"Shui")
my_name
paste(my_name,collapse = " ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
matrix(data=1:20,nrow=4,nclo=5)
matrix(data=1:20,nrow=4,ncol=5)
my_matrix2<-matrix(data=1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
load("~/.Rhistory")
load("~/.RData")
library(ggplot2)
library(dplyr)
library(tidyr)
library(knitr)
library(lubridate)
options(digits=3)
# Import the original dataset
data_CDNOW <- read.table("./CDNOW.txt", header = FALSE)
data_CDNOW <- read.table("CDNOW.txt", header = FALSE)
pEG <- function(t, r, alpha){
1 - (alpha/(alpha + t))^r
}
Prob1 <- pEG(52, 0.045, 6.764)
Harzard <- (pEG(52, 0.045, 6.764) - pEG(51, 0.045, 6.764))/(1-pEG(52, 0.045, 6.764))
pEG(52, 0.045, 6.764) - pEG(51, 0.045, 6.764)
pEG(52, 0.045, 6.764)
pEG(51, 0.045, 6.764)
Prob2 <- Hazard * 52
Harzard <- (pEG(52, 0.045, 6.764) - pEG(51, 0.045, 6.764))/(1-pEG(52, 0.045, 6.764))
Prob2 <- Harzard * 52
Harzard <- 0.045/6.764
Prob2 <- Harzard * 52
Prob2 <- 1-exp(-Harzard * 52)
Prob2 <- (pEG(104, 0.045,6.764)-pEG(52,0.045,6.764))/(1-pEG(52,0.045,6.764))
install.packages(c("ggplot2", "htmltools", "lubridate", "rmarkdown", "tidyr"))
install.packages("Shiny")
install.packages("shiny")
library(shiny)
library(shiny)
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='sheenayu', token='76BC6D6C44F3645F7F60A3A0DB2F02F0', secret='kfUOxqP4dV2CQXYEyc0cch4kMq4oqYWUJriKNSSm')
library(shinyapps)
require(devtools)
install_github('ropensci/plotly')
install_github('ropensci/plotly')
install_github('ramnathv/rCharts')
install_github('ramnathv/rCharts')
require(devtools)
install_github('ramnathv/rCharts')
install.packages('manipulate')
install.packages('devtools')
install.packages("devtools")
require(devtools)
install_github('ramnathv/rCharts')
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
library(manipulate)
manipulate(plot(1:x), x = slider(1, 100))
library(manipulate)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
n1$save('fig/n1.html', cdn = TRUE)
cat('<iframe src="fig/n1.html" width=100%, height=600></iframe>')
install_github('ramnathv/rCharts')
install.packages(c('devtools','curl'))
install.packages(c("devtools", "curl"))
require(devtools)
install_github('ramnathv/rCharts')
install_github('ropensci/plotly')
library(slidify)
setwd("C:/Users/shuiy/Documents/R files-SHUI/slidify")
author("Sheena_slidify")
slidify("index.Rmd")
browseURL("index.html")
getwd()
slidify("index.Rmd")
publish_github("SheenaYu", "slidify")
publish("SheenaYu", "slidify")
